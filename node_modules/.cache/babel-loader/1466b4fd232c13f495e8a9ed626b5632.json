{"ast":null,"code":"var _jsxFileName = \"E:\\\\JS\\\\Javascript\\\\my-app-react\\\\src\\\\components\\\\Profile\\\\MyPosts\\\\MyPosts.jsx\";\nimport React from 'react';\nimport s from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport { addNewPostActionCreator, updateNewPostTextActionCreator } from \"../../../Redux/profileReducer\";\n\nconst MyPosts = props => {\n  let newPostElement = React.createRef();\n\n  let addPost = () => {\n    props.dispatch(addNewPostActionCreator());\n  };\n\n  let newAddWorld = () => {\n    let text = newPostElement.current.value;\n    props.dispatch(updateNewPostTextActionCreator(text));\n  };\n\n  let posts = props.state.profilePage;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    ref: newPostElement,\n    onChange: newAddWorld,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: addPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043D\\u043E\\u0432\\u044B\\u0439 \\u043F\\u043E\\u0441\\u0442 \"))), posts.posts.map(el => {\n    return React.createElement(Post, {\n      post: el.post,\n      id: el.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    });\n  }));\n};\n\nexport default MyPosts;","map":{"version":3,"sources":["E:/JS/Javascript/my-app-react/src/components/Profile/MyPosts/MyPosts.jsx"],"names":["React","s","Post","addNewPostActionCreator","updateNewPostTextActionCreator","MyPosts","props","newPostElement","createRef","addPost","dispatch","newAddWorld","text","current","value","posts","state","profilePage","map","el","post","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,sBAAd;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAAQC,uBAAR,EAAiCC,8BAAjC,QAAsE,+BAAtE;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAGvB,MAAIC,cAAc,GAAGP,KAAK,CAACQ,SAAN,EAArB;;AACA,MAAIC,OAAO,GAAG,MAAM;AAChBH,IAAAA,KAAK,CAACI,QAAN,CAAeP,uBAAuB,EAAtC;AACH,GAFD;;AAIA,MAAIQ,WAAW,GAAG,MAAM;AACpB,QAAIC,IAAI,GAAGL,cAAc,CAACM,OAAf,CAAuBC,KAAlC;AAEAR,IAAAA,KAAK,CAACI,QAAN,CAAeN,8BAA8B,CAACQ,IAAD,CAA7C;AACH,GAJD;;AAKA,MAAIG,KAAK,GAAGT,KAAK,CAACU,KAAN,CAAYC,WAAxB;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAU,IAAA,GAAG,EAAEV,cAAf;AAA+B,IAAA,QAAQ,EAAEI,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAQ,IAAA,OAAO,EAAGF,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2GAAL,CAFJ,CADJ,EAKKM,KAAK,CAACA,KAAN,CAAYG,GAAZ,CAAiBC,EAAD,IAAO;AAAC,WAAO,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,EAAE,CAACC,IAAf;AAAqB,MAAA,EAAE,EAAED,EAAE,CAACE,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAAyC,GAAjE,CALL,CADJ;AASH,CAxBD;;AA0BA,eAAehB,OAAf","sourcesContent":["import React from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport Post from './Post/Post';\r\nimport {addNewPostActionCreator, updateNewPostTextActionCreator} from \"../../../Redux/profileReducer\";\r\n\r\nconst MyPosts = (props) => {\r\n\r\n\r\n    let newPostElement = React.createRef();\r\n    let addPost = () => {\r\n        props.dispatch(addNewPostActionCreator());\r\n    };\r\n\r\n    let newAddWorld = () => {\r\n        let text = newPostElement.current.value;\r\n\r\n        props.dispatch(updateNewPostTextActionCreator(text));\r\n    }\r\n    let posts = props.state.profilePage;\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n            <textarea ref={newPostElement} onChange={newAddWorld}></textarea>\r\n                <div><button onClick={ addPost }>Создать новый пост </button></div>\r\n            </div>\r\n            {posts.posts.map((el)=> {return <Post post={el.post} id={el.id}/>})}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyPosts;"]},"metadata":{},"sourceType":"module"}