{"ast":null,"code":"const ADD_NEW_MASSAGE_DIALOG = 'ADD_NEW_MASSAGE_DIALOG';\nconst NEW_TEXT_BODY_DIALOG = 'NEW_TEXT_BODY_DIALOG';\nexport const addNewMassageDialogActionCreator = text => ({\n  type: 'ADD_NEW_MASSAGE_DIALOG',\n  text: text\n});\nexport const newTextBodyDialogActionCreator = body => ({\n  type: 'NEW_TEXT_BODY_DIALOG',\n  body: body\n});\nconst inicialState = {\n  data: [{\n    id: 1,\n    name: 'Роман'\n  }, {\n    id: 2,\n    name: 'Сергей'\n  }, {\n    id: 3,\n    name: 'Артем'\n  }, {\n    id: 4,\n    name: 'Катя'\n  }, {\n    id: 5,\n    name: 'Маша'\n  }, {\n    id: 6,\n    name: 'Яна'\n  }],\n  dataMessage: [{\n    id: 1,\n    message: 'Привет это мое первое сообщение в моей социальной сети'\n  }, {\n    id: 2,\n    message: 'Как дела братуха'\n  }, {\n    id: 3,\n    message: 'Чувак мож ну его этот карантин, го футбол'\n  }, {\n    id: 4,\n    message: 'Где ты пропал?'\n  }, {\n    id: 5,\n    message: 'Сегодня в 20:00?'\n  }, {\n    id: 6,\n    message: 'Напонимаю что в четверг вечером курс по react'\n  }],\n  newTextBodyDialog: 'dddd'\n};\n\nconst dialogReducer = (state = inicialState, action) => {\n  switch (action.type) {\n    case NEW_TEXT_BODY_DIALOG:\n      state.newTextBodyDialog = action.body;\n      return state;\n\n    case ADD_NEW_MASSAGE_DIALOG:\n      let newMassageDialog = {\n        id: 7,\n        massage: state.newTextBodyDialog\n      };\n      state.dataMessage.push(newMassageDialog);\n      state.newTextBodyDialog = '';\n      return state;\n\n    default:\n      return state;\n  }\n\n  return state;\n};\n\nexport default dialogReducer;","map":{"version":3,"sources":["E:/JS/Javascript/my-app-react/src/Redux/dialogReducer.js"],"names":["ADD_NEW_MASSAGE_DIALOG","NEW_TEXT_BODY_DIALOG","addNewMassageDialogActionCreator","text","type","newTextBodyDialogActionCreator","body","inicialState","data","id","name","dataMessage","message","newTextBodyDialog","dialogReducer","state","action","newMassageDialog","massage","push"],"mappings":"AAAA,MAAMA,sBAAsB,GAAG,wBAA/B;AACA,MAAMC,oBAAoB,GAAG,sBAA7B;AAEA,OAAO,MAAMC,gCAAgC,GAAIC,IAAD,KAAW;AAAEC,EAAAA,IAAI,EAAE,wBAAR;AAAkCD,EAAAA,IAAI,EAACA;AAAvC,CAAX,CAAzC;AACP,OAAO,MAAME,8BAA8B,GAAIC,IAAD,KAAW;AAAEF,EAAAA,IAAI,EAAE,sBAAR;AAAgCE,EAAAA,IAAI,EAACA;AAArC,CAAX,CAAvC;AAEP,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAC,CACD;AAACC,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GADC,EAED;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GAFC,EAGD;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GAHC,EAID;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GAJC,EAKD;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GALC,EAMD;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GANC,CADY;AASjBC,EAAAA,WAAW,EAAE,CACT;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQG,IAAAA,OAAO,EAAE;AAAjB,GADS,EAET;AAACH,IAAAA,EAAE,EAAE,CAAL;AAAQG,IAAAA,OAAO,EAAE;AAAjB,GAFS,EAGT;AAACH,IAAAA,EAAE,EAAE,CAAL;AAAQG,IAAAA,OAAO,EAAE;AAAjB,GAHS,EAIT;AAACH,IAAAA,EAAE,EAAE,CAAL;AAAQG,IAAAA,OAAO,EAAE;AAAjB,GAJS,EAKT;AAACH,IAAAA,EAAE,EAAE,CAAL;AAAQG,IAAAA,OAAO,EAAE;AAAjB,GALS,EAMT;AAACH,IAAAA,EAAE,EAAE,CAAL;AAAQG,IAAAA,OAAO,EAAE;AAAjB,GANS,CATI;AAiBjBC,EAAAA,iBAAiB,EAAE;AAjBF,CAArB;;AAoBA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAEpD,UAAOA,MAAM,CAACZ,IAAd;AACI,SAAKH,oBAAL;AACIc,MAAAA,KAAK,CAACF,iBAAN,GAA0BG,MAAM,CAACV,IAAjC;AACA,aAAOS,KAAP;;AACJ,SAAKf,sBAAL;AACI,UAAIiB,gBAAgB,GAAG;AACnBR,QAAAA,EAAE,EAAC,CADgB;AAEnBS,QAAAA,OAAO,EAAEH,KAAK,CAACF;AAFI,OAAvB;AAIAE,MAAAA,KAAK,CAACJ,WAAN,CAAkBQ,IAAlB,CAAuBF,gBAAvB;AACAF,MAAAA,KAAK,CAACF,iBAAN,GAA0B,EAA1B;AACA,aAAOE,KAAP;;AACJ;AACI,aAAOA,KAAP;AAbR;;AAgBA,SAAOA,KAAP;AACH,CAnBD;;AAqBA,eAAeD,aAAf","sourcesContent":["const ADD_NEW_MASSAGE_DIALOG = 'ADD_NEW_MASSAGE_DIALOG';\r\nconst NEW_TEXT_BODY_DIALOG = 'NEW_TEXT_BODY_DIALOG';\r\n\r\nexport const addNewMassageDialogActionCreator = (text) => ({ type: 'ADD_NEW_MASSAGE_DIALOG', text:text });\r\nexport const newTextBodyDialogActionCreator = (body) => ({ type: 'NEW_TEXT_BODY_DIALOG', body:body });\r\n\r\nconst inicialState = {\r\n    data:[\r\n        {id: 1, name: 'Роман'},\r\n        {id: 2, name: 'Сергей'},\r\n        {id: 3, name: 'Артем'},\r\n        {id: 4, name: 'Катя'},\r\n        {id: 5, name: 'Маша'},\r\n        {id: 6, name: 'Яна'}\r\n    ],\r\n    dataMessage: [\r\n        {id: 1, message: 'Привет это мое первое сообщение в моей социальной сети'},\r\n        {id: 2, message: 'Как дела братуха'},\r\n        {id: 3, message: 'Чувак мож ну его этот карантин, го футбол'},\r\n        {id: 4, message: 'Где ты пропал?'},\r\n        {id: 5, message: 'Сегодня в 20:00?'},\r\n        {id: 6, message: 'Напонимаю что в четверг вечером курс по react'}\r\n    ],\r\n    newTextBodyDialog: 'dddd'\r\n};\r\n\r\nconst dialogReducer = (state = inicialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case NEW_TEXT_BODY_DIALOG :\r\n            state.newTextBodyDialog = action.body;\r\n            return state;\r\n        case ADD_NEW_MASSAGE_DIALOG :\r\n            let newMassageDialog = {\r\n                id:7,\r\n                massage: state.newTextBodyDialog\r\n            };\r\n            state.dataMessage.push(newMassageDialog);\r\n            state.newTextBodyDialog = '';\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport default dialogReducer;"]},"metadata":{},"sourceType":"module"}